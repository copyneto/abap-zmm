*---------------------------------------------------------------------*
*    view related FORM routines
*---------------------------------------------------------------------*
*...processing: ZVMM_FCI........................................*
FORM GET_DATA_ZVMM_FCI.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZTMM_FCI WHERE
(VIM_WHERETAB) .
    CLEAR ZVMM_FCI .
ZVMM_FCI-CLIENT =
ZTMM_FCI-CLIENT .
ZVMM_FCI-EMPRESA =
ZTMM_FCI-EMPRESA .
ZVMM_FCI-CENTRO =
ZTMM_FCI-CENTRO .
ZVMM_FCI-COD_MATERIAL =
ZTMM_FCI-COD_MATERIAL .
ZVMM_FCI-DATA_ENVIO =
ZTMM_FCI-DATA_ENVIO .
ZVMM_FCI-HORA_ENVIO =
ZTMM_FCI-HORA_ENVIO .
ZVMM_FCI-DESCRI_MAT =
ZTMM_FCI-DESCRI_MAT .
ZVMM_FCI-LOCAL_NEG =
ZTMM_FCI-LOCAL_NEG .
ZVMM_FCI-NUM_CONTROLE_FCI =
ZTMM_FCI-NUM_CONTROLE_FCI .
ZVMM_FCI-INATIVO =
ZTMM_FCI-INATIVO .
<VIM_TOTAL_STRUC> = ZVMM_FCI.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZVMM_FCI .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZVMM_FCI.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZVMM_FCI-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZTMM_FCI WHERE
  EMPRESA = ZVMM_FCI-EMPRESA AND
  CENTRO = ZVMM_FCI-CENTRO AND
  COD_MATERIAL = ZVMM_FCI-COD_MATERIAL AND
  DATA_ENVIO = ZVMM_FCI-DATA_ENVIO AND
  HORA_ENVIO = ZVMM_FCI-HORA_ENVIO .
    IF SY-SUBRC = 0.
    DELETE ZTMM_FCI .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZTMM_FCI WHERE
  EMPRESA = ZVMM_FCI-EMPRESA AND
  CENTRO = ZVMM_FCI-CENTRO AND
  COD_MATERIAL = ZVMM_FCI-COD_MATERIAL AND
  DATA_ENVIO = ZVMM_FCI-DATA_ENVIO AND
  HORA_ENVIO = ZVMM_FCI-HORA_ENVIO .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZTMM_FCI.
    ENDIF.
ZTMM_FCI-CLIENT =
ZVMM_FCI-CLIENT .
ZTMM_FCI-EMPRESA =
ZVMM_FCI-EMPRESA .
ZTMM_FCI-CENTRO =
ZVMM_FCI-CENTRO .
ZTMM_FCI-COD_MATERIAL =
ZVMM_FCI-COD_MATERIAL .
ZTMM_FCI-DATA_ENVIO =
ZVMM_FCI-DATA_ENVIO .
ZTMM_FCI-HORA_ENVIO =
ZVMM_FCI-HORA_ENVIO .
ZTMM_FCI-DESCRI_MAT =
ZVMM_FCI-DESCRI_MAT .
ZTMM_FCI-LOCAL_NEG =
ZVMM_FCI-LOCAL_NEG .
ZTMM_FCI-NUM_CONTROLE_FCI =
ZVMM_FCI-NUM_CONTROLE_FCI .
ZTMM_FCI-INATIVO =
ZVMM_FCI-INATIVO .
    IF SY-SUBRC = 0.
    UPDATE ZTMM_FCI ##WARN_OK.
    ELSE.
    INSERT ZTMM_FCI .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZVMM_FCI-UPD_FLAG,
STATUS_ZVMM_FCI-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZVMM_FCI.
  SELECT SINGLE * FROM ZTMM_FCI WHERE
EMPRESA = ZVMM_FCI-EMPRESA AND
CENTRO = ZVMM_FCI-CENTRO AND
COD_MATERIAL = ZVMM_FCI-COD_MATERIAL AND
DATA_ENVIO = ZVMM_FCI-DATA_ENVIO AND
HORA_ENVIO = ZVMM_FCI-HORA_ENVIO .
ZVMM_FCI-CLIENT =
ZTMM_FCI-CLIENT .
ZVMM_FCI-EMPRESA =
ZTMM_FCI-EMPRESA .
ZVMM_FCI-CENTRO =
ZTMM_FCI-CENTRO .
ZVMM_FCI-COD_MATERIAL =
ZTMM_FCI-COD_MATERIAL .
ZVMM_FCI-DATA_ENVIO =
ZTMM_FCI-DATA_ENVIO .
ZVMM_FCI-HORA_ENVIO =
ZTMM_FCI-HORA_ENVIO .
ZVMM_FCI-DESCRI_MAT =
ZTMM_FCI-DESCRI_MAT .
ZVMM_FCI-LOCAL_NEG =
ZTMM_FCI-LOCAL_NEG .
ZVMM_FCI-NUM_CONTROLE_FCI =
ZTMM_FCI-NUM_CONTROLE_FCI .
ZVMM_FCI-INATIVO =
ZTMM_FCI-INATIVO .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZVMM_FCI USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZVMM_FCI-EMPRESA TO
ZTMM_FCI-EMPRESA .
MOVE ZVMM_FCI-CENTRO TO
ZTMM_FCI-CENTRO .
MOVE ZVMM_FCI-COD_MATERIAL TO
ZTMM_FCI-COD_MATERIAL .
MOVE ZVMM_FCI-DATA_ENVIO TO
ZTMM_FCI-DATA_ENVIO .
MOVE ZVMM_FCI-HORA_ENVIO TO
ZTMM_FCI-HORA_ENVIO .
MOVE ZVMM_FCI-CLIENT TO
ZTMM_FCI-CLIENT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTMM_FCI'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTMM_FCI TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTMM_FCI'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
